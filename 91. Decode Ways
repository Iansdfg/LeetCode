class Solution(object):
    def numDecodings(self, s):
        """
        :type s: str
        :rtype: int

        dp[i] = dp[i-1] if s[i] != '0'
              + dp[i-2] if '9' < s[i-2:i] < '27'

        """
        dp = [0] * (len(s) + 1)
        dp[0] = 1
        for i in range(1, len(dp)):
            if s[i - 1] != '0':
                dp[i] = dp[i - 1]
            if i != 1 and '09' < s[i - 2:i] < '27':
                dp[i] += dp[i - 2]
        return dp[-1]

        # if s == '' or s =='0':return 0
        # dp = [1,1]
        # for i in range(2,len(s)+1):
        #     if 10 < int(s[i - 2:i]) <= 26 and s[i - 1] != '0':
        #         dp.append(dp[i-2]+dp[i-1])
        #     elif int(s[i - 2:i]) == 10 or int(s[i - 2:i]) == 20:
        #         dp.append(dp[i - 2])
        #     elif s[i - 1] != '0':
        #         dp.append(dp[i - 1])
        #     else:
        #         return 0
        # return dp[len(s)]


def execute():
    sol = Solution()
    s = "12"
    print(sol.numDecodings(s))

if __name__ == '__main__':
    execute()

