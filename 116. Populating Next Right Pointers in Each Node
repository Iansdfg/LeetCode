"""
# Definition for a Node.
class Node(object):
    def __init__(self, val, left, right, next):
        self.val = val
        self.left = left
        self.right = right
        self.next = next
"""
class Solution(object):
    def connect(self, root):
        """
        :type root: Node
        :rtype: Node
        """
        res = []
        self.record(root, 0, res)
        # print(res)
        for ele in res:
            self.formLinked(ele)
        return root
        
    def formLinked(self, array):
        dummy = array[0]
        for i in range(1,len(array)):
            dummy.next = array[i]
            dummy = dummy.next
            
    def record(self, root, depth, res):
        if not root: return
        if len(res)<depth+1:
            res.append([])
        res[depth].append(root)
        self.record(root.left, depth+1,res)
        self.record(root.right, depth+1,res)
        
