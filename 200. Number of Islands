class Solution(object):
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        if grid == [] or grid[0]==[]:
            return 0
        n, m = len(grid[0]), len(grid)
        res = 0
        for i in range(m):
            for j in range(n):
                if grid[i][j] == "1":
                    res+=1
                    self.dfs(grid, i,j,m,n)
        return res
    
    def dfs(self,grid, x,y,m,n):
        if x < 0 or y < 0 or x>=m or y>=n or grid[x][y]=='0':
            return
        grid[x][y]='0'
        self.dfs(grid,x+1,y,m,n)
        self.dfs(grid,x,y+1,m,n)
        self.dfs(grid,x-1,y,m,n)
        self.dfs(grid,x,y-1,m,n)
                
        
        
        
        
